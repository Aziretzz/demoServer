# Generated by Django 5.0.3 on 2024-04-21 16:04

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('page', '0019_alter_categorymenu_restaurant'),
        ('rg', '0007_alter_guest_phone_number'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_cost', models.FloatField(verbose_name='Общая сумма')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('phone_number', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть в формате: '+79999999999'. Всего 11 цифр.", regex='^\\+7\\d{10}$')], verbose_name='Номер телефона')),
                ('additional_requests', models.TextField(blank=True, null=True, verbose_name='Особые пожелание')),
                ('address', models.CharField(max_length=100, verbose_name='Адрес')),
                ('status', models.IntegerField(choices=[('0', 'Принят'), ('1', 'Готовится'), ('2', 'В пути'), ('3', 'Доставлен')], verbose_name='Статус')),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rg.guest')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.dishmenu')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.order')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='dishes',
            field=models.ManyToManyField(through='page.OrderDish', to='page.dishmenu'),
        ),
    ]
